#! /usr/bin/vvp
:ivl_version "12.0 (stable)" "(v12_0-dirty)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 10;
:vpi_module "/usr/lib/ivl/system.vpi";
:vpi_module "/usr/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/ivl/va_math.vpi";
S_0x60d76d364560 .scope module, "REG_tb" "REG_tb" 2 3;
 .timescale -9 -10;
P_0x60d76d364760 .param/str "BLUE" 1 2 76, "\011\033[1;34m";
P_0x60d76d3647a0 .param/l "CLOCK_PERIOD" 1 2 23, +C4<00000000000000000000000001100100>;
P_0x60d76d3647e0 .param/str "CYAN" 1 2 78, "\011\011\033[1;36m";
P_0x60d76d364820 .param/str "RED" 1 2 79, "\011\011\033[1;31m";
P_0x60d76d364860 .param/str "RESET" 1 2 80, "\011\033[0m";
P_0x60d76d3648a0 .param/l "RESET_PULSE" 1 2 30, +C4<00000000000000000000000000011001>;
P_0x60d76d3648e0 .param/str "YELLOW" 1 2 77, "\011\033[1;33m";
v0x60d76d391820_0 .var "D0", 0 0;
v0x60d76d391930_0 .net "Q", 7 0, L_0x60d76d395450;  1 drivers
v0x60d76d3919f0_0 .var "clk", 0 0;
v0x60d76d391a90_0 .var "load", 0 0;
v0x60d76d391b30_0 .var "load_data", 7 0;
v0x60d76d391c20_0 .var "prev_D0", 0 0;
v0x60d76d391cc0_0 .var "prev_Q", 7 0;
v0x60d76d391d80_0 .var "prev_load", 0 0;
v0x60d76d391e40_0 .var "prev_shift", 0 0;
v0x60d76d391f00_0 .var "resetn", 0 0;
v0x60d76d391fa0_0 .var "shift", 0 0;
E_0x60d76d33ea40/0 .event anyedge, v0x60d76d3910a0_0, v0x60d76d387d40_0;
E_0x60d76d33ea40/1 .event posedge, v0x60d76d391680_0, v0x60d76d387fd0_0, v0x60d76d3597a0_0;
E_0x60d76d33ea40 .event/or E_0x60d76d33ea40/0, E_0x60d76d33ea40/1;
E_0x60d76d33ef20 .event posedge, v0x60d76d3597a0_0;
S_0x60d76d358d60 .scope module, "dut" "REG" 2 12, 3 1 0, S_0x60d76d364560;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "resetn";
    .port_info 2 /INPUT 1 "load";
    .port_info 3 /INPUT 8 "load_data";
    .port_info 4 /INPUT 1 "shift";
    .port_info 5 /INPUT 1 "D0";
    .port_info 6 /OUTPUT 8 "Q";
v0x60d76d390ee0_0 .net "D", 7 0, L_0x60d76d3962c0;  1 drivers
v0x60d76d390fe0_0 .net "D0", 0 0, v0x60d76d391820_0;  1 drivers
v0x60d76d3910a0_0 .net "Q", 7 0, L_0x60d76d395450;  alias, 1 drivers
v0x60d76d391170_0 .net "clk", 0 0, v0x60d76d3919f0_0;  1 drivers
v0x60d76d391210_0 .net "load", 0 0, v0x60d76d391a90_0;  1 drivers
v0x60d76d391410_0 .net "load_data", 7 0, v0x60d76d391b30_0;  1 drivers
v0x60d76d3914d0_0 .net "resetn", 0 0, v0x60d76d391f00_0;  1 drivers
v0x60d76d391680_0 .net "shift", 0 0, v0x60d76d391fa0_0;  1 drivers
L_0x60d76d392110 .part L_0x60d76d3962c0, 0, 1;
L_0x60d76d3925a0 .part v0x60d76d391b30_0, 0, 1;
L_0x60d76d392750 .part L_0x60d76d3962c0, 1, 1;
L_0x60d76d392b80 .part L_0x60d76d395450, 0, 1;
L_0x60d76d392cf0 .part v0x60d76d391b30_0, 1, 1;
L_0x60d76d393060 .part L_0x60d76d3962c0, 2, 1;
L_0x60d76d393400 .part L_0x60d76d395450, 1, 1;
L_0x60d76d3934f0 .part v0x60d76d391b30_0, 2, 1;
L_0x60d76d3936a0 .part L_0x60d76d3962c0, 3, 1;
L_0x60d76d393a10 .part L_0x60d76d395450, 2, 1;
L_0x60d76d393bf0 .part v0x60d76d391b30_0, 3, 1;
L_0x60d76d393d00 .part L_0x60d76d3962c0, 4, 1;
L_0x60d76d394130 .part L_0x60d76d395450, 3, 1;
L_0x60d76d394220 .part v0x60d76d391b30_0, 4, 1;
L_0x60d76d394390 .part L_0x60d76d3962c0, 5, 1;
L_0x60d76d3947a0 .part L_0x60d76d395450, 4, 1;
L_0x60d76d394920 .part v0x60d76d391b30_0, 5, 1;
L_0x60d76d394a80 .part L_0x60d76d3962c0, 6, 1;
L_0x60d76d394f30 .part L_0x60d76d395450, 5, 1;
L_0x60d76d395020 .part v0x60d76d391b30_0, 6, 1;
L_0x60d76d394b20 .part L_0x60d76d3962c0, 7, 1;
LS_0x60d76d395450_0_0 .concat8 [ 1 1 1 1], v0x60d76d359700_0, v0x60d76d388730_0, v0x60d76d389b80_0, v0x60d76d38b080_0;
LS_0x60d76d395450_0_4 .concat8 [ 1 1 1 1], v0x60d76d38c4b0_0, v0x60d76d38d7d0_0, v0x60d76d38ec10_0, v0x60d76d390050_0;
L_0x60d76d395450 .concat8 [ 4 4 0 0], LS_0x60d76d395450_0_0, LS_0x60d76d395450_0_4;
L_0x60d76d396010 .part L_0x60d76d395450, 6, 1;
L_0x60d76d396100 .part v0x60d76d391b30_0, 7, 1;
LS_0x60d76d3962c0_0_0 .concat8 [ 1 1 1 1], L_0x60d76d392430, L_0x60d76d392a10, L_0x60d76d393290, L_0x60d76d3938f0;
LS_0x60d76d3962c0_0_4 .concat8 [ 1 1 1 1], L_0x60d76d393fc0, L_0x60d76d394630, L_0x60d76d394dc0, L_0x60d76d395ea0;
L_0x60d76d3962c0 .concat8 [ 4 4 0 0], LS_0x60d76d3962c0_0_0, LS_0x60d76d3962c0_0_4;
S_0x60d76d35bb60 .scope generate, "v[0]" "v[0]" 3 15, 3 15 0, S_0x60d76d358d60;
 .timescale 0 0;
P_0x60d76d35e2e0 .param/l "i" 1 3 15, +C4<00>;
L_0x60d76d392070 .functor OR 1, v0x60d76d391a90_0, v0x60d76d391fa0_0, C4<0>, C4<0>;
S_0x60d76d35e960 .scope module, "flip_flop_i" "D_FlipFlop" 3 31, 4 1 0, S_0x60d76d35bb60;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "resetn";
    .port_info 2 /INPUT 1 "enable";
    .port_info 3 /INPUT 1 "D";
    .port_info 4 /OUTPUT 1 "Q";
v0x60d76d35c5a0_0 .net "D", 0 0, L_0x60d76d392110;  1 drivers
v0x60d76d359700_0 .var "Q", 0 0;
v0x60d76d3597a0_0 .net "clk", 0 0, v0x60d76d3919f0_0;  alias, 1 drivers
v0x60d76d356900_0 .net "enable", 0 0, L_0x60d76d392070;  1 drivers
v0x60d76d3569a0_0 .net "resetn", 0 0, v0x60d76d391f00_0;  alias, 1 drivers
E_0x60d76d329130/0 .event negedge, v0x60d76d3569a0_0;
E_0x60d76d329130/1 .event posedge, v0x60d76d3597a0_0;
E_0x60d76d329130 .event/or E_0x60d76d329130/0, E_0x60d76d329130/1;
S_0x60d76d366c80 .scope generate, "genblk1" "genblk1" 3 16, 3 16 0, S_0x60d76d35bb60;
 .timescale 0 0;
S_0x60d76d361760 .scope module, "mux_0" "MUX" 3 17, 5 1 0, S_0x60d76d366c80;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in0";
    .port_info 1 /INPUT 1 "in1";
    .port_info 2 /INPUT 1 "select";
    .port_info 3 /OUTPUT 1 "out";
L_0x60d76d3921e0 .functor NOT 1, v0x60d76d391a90_0, C4<0>, C4<0>, C4<0>;
L_0x60d76d392280 .functor AND 1, L_0x60d76d3921e0, v0x60d76d391820_0, C4<1>, C4<1>;
L_0x60d76d392390 .functor AND 1, v0x60d76d391a90_0, L_0x60d76d3925a0, C4<1>, C4<1>;
L_0x60d76d392430 .functor OR 1, L_0x60d76d392280, L_0x60d76d392390, C4<0>, C4<0>;
v0x60d76d353b00_0 .net *"_ivl_0", 0 0, L_0x60d76d3921e0;  1 drivers
v0x60d76d353ba0_0 .net *"_ivl_2", 0 0, L_0x60d76d392280;  1 drivers
v0x60d76d387c80_0 .net *"_ivl_4", 0 0, L_0x60d76d392390;  1 drivers
v0x60d76d387d40_0 .net "in0", 0 0, v0x60d76d391820_0;  alias, 1 drivers
v0x60d76d387e00_0 .net "in1", 0 0, L_0x60d76d3925a0;  1 drivers
v0x60d76d387f10_0 .net "out", 0 0, L_0x60d76d392430;  1 drivers
v0x60d76d387fd0_0 .net "select", 0 0, v0x60d76d391a90_0;  alias, 1 drivers
S_0x60d76d388110 .scope generate, "v[1]" "v[1]" 3 15, 3 15 0, S_0x60d76d358d60;
 .timescale 0 0;
P_0x60d76d388330 .param/l "i" 1 3 15, +C4<01>;
L_0x60d76d3926e0 .functor OR 1, v0x60d76d391a90_0, v0x60d76d391fa0_0, C4<0>, C4<0>;
S_0x60d76d3883f0 .scope module, "flip_flop_i" "D_FlipFlop" 3 31, 4 1 0, S_0x60d76d388110;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "resetn";
    .port_info 2 /INPUT 1 "enable";
    .port_info 3 /INPUT 1 "D";
    .port_info 4 /OUTPUT 1 "Q";
v0x60d76d388650_0 .net "D", 0 0, L_0x60d76d392750;  1 drivers
v0x60d76d388730_0 .var "Q", 0 0;
v0x60d76d3887f0_0 .net "clk", 0 0, v0x60d76d3919f0_0;  alias, 1 drivers
v0x60d76d3888c0_0 .net "enable", 0 0, L_0x60d76d3926e0;  1 drivers
v0x60d76d388960_0 .net "resetn", 0 0, v0x60d76d391f00_0;  alias, 1 drivers
S_0x60d76d388ae0 .scope generate, "genblk1" "genblk1" 3 16, 3 16 0, S_0x60d76d388110;
 .timescale 0 0;
S_0x60d76d388ce0 .scope module, "mux_i" "MUX" 3 24, 5 1 0, S_0x60d76d388ae0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in0";
    .port_info 1 /INPUT 1 "in1";
    .port_info 2 /INPUT 1 "select";
    .port_info 3 /OUTPUT 1 "out";
L_0x60d76d392840 .functor NOT 1, v0x60d76d391a90_0, C4<0>, C4<0>, C4<0>;
L_0x60d76d3928b0 .functor AND 1, L_0x60d76d392840, L_0x60d76d392b80, C4<1>, C4<1>;
L_0x60d76d392970 .functor AND 1, v0x60d76d391a90_0, L_0x60d76d392cf0, C4<1>, C4<1>;
L_0x60d76d392a10 .functor OR 1, L_0x60d76d3928b0, L_0x60d76d392970, C4<0>, C4<0>;
v0x60d76d388ec0_0 .net *"_ivl_0", 0 0, L_0x60d76d392840;  1 drivers
v0x60d76d388fc0_0 .net *"_ivl_2", 0 0, L_0x60d76d3928b0;  1 drivers
v0x60d76d3890a0_0 .net *"_ivl_4", 0 0, L_0x60d76d392970;  1 drivers
v0x60d76d389190_0 .net "in0", 0 0, L_0x60d76d392b80;  1 drivers
v0x60d76d389250_0 .net "in1", 0 0, L_0x60d76d392cf0;  1 drivers
v0x60d76d389360_0 .net "out", 0 0, L_0x60d76d392a10;  1 drivers
v0x60d76d389420_0 .net "select", 0 0, v0x60d76d391a90_0;  alias, 1 drivers
S_0x60d76d389550 .scope generate, "v[2]" "v[2]" 3 15, 3 15 0, S_0x60d76d358d60;
 .timescale 0 0;
P_0x60d76d389750 .param/l "i" 1 3 15, +C4<010>;
L_0x60d76d392de0 .functor OR 1, v0x60d76d391a90_0, v0x60d76d391fa0_0, C4<0>, C4<0>;
S_0x60d76d389810 .scope module, "flip_flop_i" "D_FlipFlop" 3 31, 4 1 0, S_0x60d76d389550;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "resetn";
    .port_info 2 /INPUT 1 "enable";
    .port_info 3 /INPUT 1 "D";
    .port_info 4 /OUTPUT 1 "Q";
v0x60d76d389aa0_0 .net "D", 0 0, L_0x60d76d393060;  1 drivers
v0x60d76d389b80_0 .var "Q", 0 0;
v0x60d76d389c40_0 .net "clk", 0 0, v0x60d76d3919f0_0;  alias, 1 drivers
v0x60d76d389d60_0 .net "enable", 0 0, L_0x60d76d392de0;  1 drivers
v0x60d76d389e00_0 .net "resetn", 0 0, v0x60d76d391f00_0;  alias, 1 drivers
S_0x60d76d389fe0 .scope generate, "genblk1" "genblk1" 3 16, 3 16 0, S_0x60d76d389550;
 .timescale 0 0;
S_0x60d76d38a1e0 .scope module, "mux_i" "MUX" 3 24, 5 1 0, S_0x60d76d389fe0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in0";
    .port_info 1 /INPUT 1 "in1";
    .port_info 2 /INPUT 1 "select";
    .port_info 3 /OUTPUT 1 "out";
L_0x60d76d393140 .functor NOT 1, v0x60d76d391a90_0, C4<0>, C4<0>, C4<0>;
L_0x60d76d3931b0 .functor AND 1, L_0x60d76d393140, L_0x60d76d393400, C4<1>, C4<1>;
L_0x60d76d393220 .functor AND 1, v0x60d76d391a90_0, L_0x60d76d3934f0, C4<1>, C4<1>;
L_0x60d76d393290 .functor OR 1, L_0x60d76d3931b0, L_0x60d76d393220, C4<0>, C4<0>;
v0x60d76d38a3c0_0 .net *"_ivl_0", 0 0, L_0x60d76d393140;  1 drivers
v0x60d76d38a4c0_0 .net *"_ivl_2", 0 0, L_0x60d76d3931b0;  1 drivers
v0x60d76d38a5a0_0 .net *"_ivl_4", 0 0, L_0x60d76d393220;  1 drivers
v0x60d76d38a660_0 .net "in0", 0 0, L_0x60d76d393400;  1 drivers
v0x60d76d38a720_0 .net "in1", 0 0, L_0x60d76d3934f0;  1 drivers
v0x60d76d38a830_0 .net "out", 0 0, L_0x60d76d393290;  1 drivers
v0x60d76d38a8f0_0 .net "select", 0 0, v0x60d76d391a90_0;  alias, 1 drivers
S_0x60d76d38aa60 .scope generate, "v[3]" "v[3]" 3 15, 3 15 0, S_0x60d76d358d60;
 .timescale 0 0;
P_0x60d76d38ac60 .param/l "i" 1 3 15, +C4<011>;
L_0x60d76d393630 .functor OR 1, v0x60d76d391a90_0, v0x60d76d391fa0_0, C4<0>, C4<0>;
S_0x60d76d38ad40 .scope module, "flip_flop_i" "D_FlipFlop" 3 31, 4 1 0, S_0x60d76d38aa60;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "resetn";
    .port_info 2 /INPUT 1 "enable";
    .port_info 3 /INPUT 1 "D";
    .port_info 4 /OUTPUT 1 "Q";
v0x60d76d38afa0_0 .net "D", 0 0, L_0x60d76d3936a0;  1 drivers
v0x60d76d38b080_0 .var "Q", 0 0;
v0x60d76d38b140_0 .net "clk", 0 0, v0x60d76d3919f0_0;  alias, 1 drivers
v0x60d76d38b1e0_0 .net "enable", 0 0, L_0x60d76d393630;  1 drivers
v0x60d76d38b280_0 .net "resetn", 0 0, v0x60d76d391f00_0;  alias, 1 drivers
S_0x60d76d38b410 .scope generate, "genblk1" "genblk1" 3 16, 3 16 0, S_0x60d76d38aa60;
 .timescale 0 0;
S_0x60d76d38b610 .scope module, "mux_i" "MUX" 3 24, 5 1 0, S_0x60d76d38b410;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in0";
    .port_info 1 /INPUT 1 "in1";
    .port_info 2 /INPUT 1 "select";
    .port_info 3 /OUTPUT 1 "out";
L_0x60d76d393740 .functor NOT 1, v0x60d76d391a90_0, C4<0>, C4<0>, C4<0>;
L_0x60d76d3937b0 .functor AND 1, L_0x60d76d393740, L_0x60d76d393a10, C4<1>, C4<1>;
L_0x60d76d393820 .functor AND 1, v0x60d76d391a90_0, L_0x60d76d393bf0, C4<1>, C4<1>;
L_0x60d76d3938f0 .functor OR 1, L_0x60d76d3937b0, L_0x60d76d393820, C4<0>, C4<0>;
v0x60d76d38b7f0_0 .net *"_ivl_0", 0 0, L_0x60d76d393740;  1 drivers
v0x60d76d38b8f0_0 .net *"_ivl_2", 0 0, L_0x60d76d3937b0;  1 drivers
v0x60d76d38b9d0_0 .net *"_ivl_4", 0 0, L_0x60d76d393820;  1 drivers
v0x60d76d38ba90_0 .net "in0", 0 0, L_0x60d76d393a10;  1 drivers
v0x60d76d38bb50_0 .net "in1", 0 0, L_0x60d76d393bf0;  1 drivers
v0x60d76d38bc60_0 .net "out", 0 0, L_0x60d76d3938f0;  1 drivers
v0x60d76d38bd20_0 .net "select", 0 0, v0x60d76d391a90_0;  alias, 1 drivers
S_0x60d76d38be40 .scope generate, "v[4]" "v[4]" 3 15, 3 15 0, S_0x60d76d358d60;
 .timescale 0 0;
P_0x60d76d38c090 .param/l "i" 1 3 15, +C4<0100>;
L_0x60d76d393c90 .functor OR 1, v0x60d76d391a90_0, v0x60d76d391fa0_0, C4<0>, C4<0>;
S_0x60d76d38c170 .scope module, "flip_flop_i" "D_FlipFlop" 3 31, 4 1 0, S_0x60d76d38be40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "resetn";
    .port_info 2 /INPUT 1 "enable";
    .port_info 3 /INPUT 1 "D";
    .port_info 4 /OUTPUT 1 "Q";
v0x60d76d38c3d0_0 .net "D", 0 0, L_0x60d76d393d00;  1 drivers
v0x60d76d38c4b0_0 .var "Q", 0 0;
v0x60d76d38c570_0 .net "clk", 0 0, v0x60d76d3919f0_0;  alias, 1 drivers
v0x60d76d38c610_0 .net "enable", 0 0, L_0x60d76d393c90;  1 drivers
v0x60d76d38c6b0_0 .net "resetn", 0 0, v0x60d76d391f00_0;  alias, 1 drivers
S_0x60d76d38c7f0 .scope generate, "genblk1" "genblk1" 3 16, 3 16 0, S_0x60d76d38be40;
 .timescale 0 0;
S_0x60d76d38c9a0 .scope module, "mux_i" "MUX" 3 24, 5 1 0, S_0x60d76d38c7f0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in0";
    .port_info 1 /INPUT 1 "in1";
    .port_info 2 /INPUT 1 "select";
    .port_info 3 /OUTPUT 1 "out";
L_0x60d76d393e10 .functor NOT 1, v0x60d76d391a90_0, C4<0>, C4<0>, C4<0>;
L_0x60d76d393e80 .functor AND 1, L_0x60d76d393e10, L_0x60d76d394130, C4<1>, C4<1>;
L_0x60d76d393ef0 .functor AND 1, v0x60d76d391a90_0, L_0x60d76d394220, C4<1>, C4<1>;
L_0x60d76d393fc0 .functor OR 1, L_0x60d76d393e80, L_0x60d76d393ef0, C4<0>, C4<0>;
v0x60d76d38cb80_0 .net *"_ivl_0", 0 0, L_0x60d76d393e10;  1 drivers
v0x60d76d38cc80_0 .net *"_ivl_2", 0 0, L_0x60d76d393e80;  1 drivers
v0x60d76d38cd60_0 .net *"_ivl_4", 0 0, L_0x60d76d393ef0;  1 drivers
v0x60d76d38ce50_0 .net "in0", 0 0, L_0x60d76d394130;  1 drivers
v0x60d76d38cf10_0 .net "in1", 0 0, L_0x60d76d394220;  1 drivers
v0x60d76d38d020_0 .net "out", 0 0, L_0x60d76d393fc0;  1 drivers
v0x60d76d38d0e0_0 .net "select", 0 0, v0x60d76d391a90_0;  alias, 1 drivers
S_0x60d76d38d200 .scope generate, "v[5]" "v[5]" 3 15, 3 15 0, S_0x60d76d358d60;
 .timescale 0 0;
P_0x60d76d38d3b0 .param/l "i" 1 3 15, +C4<0101>;
L_0x60d76d393da0 .functor OR 1, v0x60d76d391a90_0, v0x60d76d391fa0_0, C4<0>, C4<0>;
S_0x60d76d38d490 .scope module, "flip_flop_i" "D_FlipFlop" 3 31, 4 1 0, S_0x60d76d38d200;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "resetn";
    .port_info 2 /INPUT 1 "enable";
    .port_info 3 /INPUT 1 "D";
    .port_info 4 /OUTPUT 1 "Q";
v0x60d76d38d6f0_0 .net "D", 0 0, L_0x60d76d394390;  1 drivers
v0x60d76d38d7d0_0 .var "Q", 0 0;
v0x60d76d38d890_0 .net "clk", 0 0, v0x60d76d3919f0_0;  alias, 1 drivers
v0x60d76d38d960_0 .net "enable", 0 0, L_0x60d76d393da0;  1 drivers
v0x60d76d38da00_0 .net "resetn", 0 0, v0x60d76d391f00_0;  alias, 1 drivers
S_0x60d76d38db90 .scope generate, "genblk1" "genblk1" 3 16, 3 16 0, S_0x60d76d38d200;
 .timescale 0 0;
S_0x60d76d38dd90 .scope module, "mux_i" "MUX" 3 24, 5 1 0, S_0x60d76d38db90;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in0";
    .port_info 1 /INPUT 1 "in1";
    .port_info 2 /INPUT 1 "select";
    .port_info 3 /OUTPUT 1 "out";
L_0x60d76d394430 .functor NOT 1, v0x60d76d391a90_0, C4<0>, C4<0>, C4<0>;
L_0x60d76d3944a0 .functor AND 1, L_0x60d76d394430, L_0x60d76d3947a0, C4<1>, C4<1>;
L_0x60d76d394560 .functor AND 1, v0x60d76d391a90_0, L_0x60d76d394920, C4<1>, C4<1>;
L_0x60d76d394630 .functor OR 1, L_0x60d76d3944a0, L_0x60d76d394560, C4<0>, C4<0>;
v0x60d76d38df70_0 .net *"_ivl_0", 0 0, L_0x60d76d394430;  1 drivers
v0x60d76d38e070_0 .net *"_ivl_2", 0 0, L_0x60d76d3944a0;  1 drivers
v0x60d76d38e150_0 .net *"_ivl_4", 0 0, L_0x60d76d394560;  1 drivers
v0x60d76d38e240_0 .net "in0", 0 0, L_0x60d76d3947a0;  1 drivers
v0x60d76d38e300_0 .net "in1", 0 0, L_0x60d76d394920;  1 drivers
v0x60d76d38e410_0 .net "out", 0 0, L_0x60d76d394630;  1 drivers
v0x60d76d38e4d0_0 .net "select", 0 0, v0x60d76d391a90_0;  alias, 1 drivers
S_0x60d76d38e5f0 .scope generate, "v[6]" "v[6]" 3 15, 3 15 0, S_0x60d76d358d60;
 .timescale 0 0;
P_0x60d76d38e7f0 .param/l "i" 1 3 15, +C4<0110>;
L_0x60d76d394a10 .functor OR 1, v0x60d76d391a90_0, v0x60d76d391fa0_0, C4<0>, C4<0>;
S_0x60d76d38e8d0 .scope module, "flip_flop_i" "D_FlipFlop" 3 31, 4 1 0, S_0x60d76d38e5f0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "resetn";
    .port_info 2 /INPUT 1 "enable";
    .port_info 3 /INPUT 1 "D";
    .port_info 4 /OUTPUT 1 "Q";
v0x60d76d38eb30_0 .net "D", 0 0, L_0x60d76d394a80;  1 drivers
v0x60d76d38ec10_0 .var "Q", 0 0;
v0x60d76d38ecd0_0 .net "clk", 0 0, v0x60d76d3919f0_0;  alias, 1 drivers
v0x60d76d38eda0_0 .net "enable", 0 0, L_0x60d76d394a10;  1 drivers
v0x60d76d38ee40_0 .net "resetn", 0 0, v0x60d76d391f00_0;  alias, 1 drivers
S_0x60d76d38efd0 .scope generate, "genblk1" "genblk1" 3 16, 3 16 0, S_0x60d76d38e5f0;
 .timescale 0 0;
S_0x60d76d38f1d0 .scope module, "mux_i" "MUX" 3 24, 5 1 0, S_0x60d76d38efd0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in0";
    .port_info 1 /INPUT 1 "in1";
    .port_info 2 /INPUT 1 "select";
    .port_info 3 /OUTPUT 1 "out";
L_0x60d76d394bc0 .functor NOT 1, v0x60d76d391a90_0, C4<0>, C4<0>, C4<0>;
L_0x60d76d394c30 .functor AND 1, L_0x60d76d394bc0, L_0x60d76d394f30, C4<1>, C4<1>;
L_0x60d76d394cf0 .functor AND 1, v0x60d76d391a90_0, L_0x60d76d395020, C4<1>, C4<1>;
L_0x60d76d394dc0 .functor OR 1, L_0x60d76d394c30, L_0x60d76d394cf0, C4<0>, C4<0>;
v0x60d76d38f3b0_0 .net *"_ivl_0", 0 0, L_0x60d76d394bc0;  1 drivers
v0x60d76d38f4b0_0 .net *"_ivl_2", 0 0, L_0x60d76d394c30;  1 drivers
v0x60d76d38f590_0 .net *"_ivl_4", 0 0, L_0x60d76d394cf0;  1 drivers
v0x60d76d38f680_0 .net "in0", 0 0, L_0x60d76d394f30;  1 drivers
v0x60d76d38f740_0 .net "in1", 0 0, L_0x60d76d395020;  1 drivers
v0x60d76d38f850_0 .net "out", 0 0, L_0x60d76d394dc0;  1 drivers
v0x60d76d38f910_0 .net "select", 0 0, v0x60d76d391a90_0;  alias, 1 drivers
S_0x60d76d38fa30 .scope generate, "v[7]" "v[7]" 3 15, 3 15 0, S_0x60d76d358d60;
 .timescale 0 0;
P_0x60d76d38fc30 .param/l "i" 1 3 15, +C4<0111>;
L_0x60d76d3952d0 .functor OR 1, v0x60d76d391a90_0, v0x60d76d391fa0_0, C4<0>, C4<0>;
S_0x60d76d38fd10 .scope module, "flip_flop_i" "D_FlipFlop" 3 31, 4 1 0, S_0x60d76d38fa30;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "resetn";
    .port_info 2 /INPUT 1 "enable";
    .port_info 3 /INPUT 1 "D";
    .port_info 4 /OUTPUT 1 "Q";
v0x60d76d38ff70_0 .net "D", 0 0, L_0x60d76d394b20;  1 drivers
v0x60d76d390050_0 .var "Q", 0 0;
v0x60d76d390110_0 .net "clk", 0 0, v0x60d76d3919f0_0;  alias, 1 drivers
v0x60d76d3901e0_0 .net "enable", 0 0, L_0x60d76d3952d0;  1 drivers
v0x60d76d390280_0 .net "resetn", 0 0, v0x60d76d391f00_0;  alias, 1 drivers
S_0x60d76d390410 .scope generate, "genblk1" "genblk1" 3 16, 3 16 0, S_0x60d76d38fa30;
 .timescale 0 0;
S_0x60d76d390610 .scope module, "mux_i" "MUX" 3 24, 5 1 0, S_0x60d76d390410;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in0";
    .port_info 1 /INPUT 1 "in1";
    .port_info 2 /INPUT 1 "select";
    .port_info 3 /OUTPUT 1 "out";
L_0x60d76d395830 .functor NOT 1, v0x60d76d391a90_0, C4<0>, C4<0>, C4<0>;
L_0x60d76d395ce0 .functor AND 1, L_0x60d76d395830, L_0x60d76d396010, C4<1>, C4<1>;
L_0x60d76d395dd0 .functor AND 1, v0x60d76d391a90_0, L_0x60d76d396100, C4<1>, C4<1>;
L_0x60d76d395ea0 .functor OR 1, L_0x60d76d395ce0, L_0x60d76d395dd0, C4<0>, C4<0>;
v0x60d76d390860_0 .net *"_ivl_0", 0 0, L_0x60d76d395830;  1 drivers
v0x60d76d390960_0 .net *"_ivl_2", 0 0, L_0x60d76d395ce0;  1 drivers
v0x60d76d390a40_0 .net *"_ivl_4", 0 0, L_0x60d76d395dd0;  1 drivers
v0x60d76d390b30_0 .net "in0", 0 0, L_0x60d76d396010;  1 drivers
v0x60d76d390bf0_0 .net "in1", 0 0, L_0x60d76d396100;  1 drivers
v0x60d76d390d00_0 .net "out", 0 0, L_0x60d76d395ea0;  1 drivers
v0x60d76d390dc0_0 .net "select", 0 0, v0x60d76d391a90_0;  alias, 1 drivers
    .scope S_0x60d76d35e960;
T_0 ;
    %wait E_0x60d76d329130;
    %load/vec4 v0x60d76d3569a0_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_0.0, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x60d76d359700_0, 0;
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v0x60d76d356900_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.2, 8;
    %load/vec4 v0x60d76d35c5a0_0;
    %assign/vec4 v0x60d76d359700_0, 0;
T_0.2 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0x60d76d3883f0;
T_1 ;
    %wait E_0x60d76d329130;
    %load/vec4 v0x60d76d388960_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_1.0, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x60d76d388730_0, 0;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v0x60d76d3888c0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %load/vec4 v0x60d76d388650_0;
    %assign/vec4 v0x60d76d388730_0, 0;
T_1.2 ;
T_1.1 ;
    %jmp T_1;
    .thread T_1;
    .scope S_0x60d76d389810;
T_2 ;
    %wait E_0x60d76d329130;
    %load/vec4 v0x60d76d389e00_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.0, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x60d76d389b80_0, 0;
    %jmp T_2.1;
T_2.0 ;
    %load/vec4 v0x60d76d389d60_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.2, 8;
    %load/vec4 v0x60d76d389aa0_0;
    %assign/vec4 v0x60d76d389b80_0, 0;
T_2.2 ;
T_2.1 ;
    %jmp T_2;
    .thread T_2;
    .scope S_0x60d76d38ad40;
T_3 ;
    %wait E_0x60d76d329130;
    %load/vec4 v0x60d76d38b280_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_3.0, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x60d76d38b080_0, 0;
    %jmp T_3.1;
T_3.0 ;
    %load/vec4 v0x60d76d38b1e0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.2, 8;
    %load/vec4 v0x60d76d38afa0_0;
    %assign/vec4 v0x60d76d38b080_0, 0;
T_3.2 ;
T_3.1 ;
    %jmp T_3;
    .thread T_3;
    .scope S_0x60d76d38c170;
T_4 ;
    %wait E_0x60d76d329130;
    %load/vec4 v0x60d76d38c6b0_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_4.0, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x60d76d38c4b0_0, 0;
    %jmp T_4.1;
T_4.0 ;
    %load/vec4 v0x60d76d38c610_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.2, 8;
    %load/vec4 v0x60d76d38c3d0_0;
    %assign/vec4 v0x60d76d38c4b0_0, 0;
T_4.2 ;
T_4.1 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0x60d76d38d490;
T_5 ;
    %wait E_0x60d76d329130;
    %load/vec4 v0x60d76d38da00_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_5.0, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x60d76d38d7d0_0, 0;
    %jmp T_5.1;
T_5.0 ;
    %load/vec4 v0x60d76d38d960_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.2, 8;
    %load/vec4 v0x60d76d38d6f0_0;
    %assign/vec4 v0x60d76d38d7d0_0, 0;
T_5.2 ;
T_5.1 ;
    %jmp T_5;
    .thread T_5;
    .scope S_0x60d76d38e8d0;
T_6 ;
    %wait E_0x60d76d329130;
    %load/vec4 v0x60d76d38ee40_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_6.0, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x60d76d38ec10_0, 0;
    %jmp T_6.1;
T_6.0 ;
    %load/vec4 v0x60d76d38eda0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.2, 8;
    %load/vec4 v0x60d76d38eb30_0;
    %assign/vec4 v0x60d76d38ec10_0, 0;
T_6.2 ;
T_6.1 ;
    %jmp T_6;
    .thread T_6;
    .scope S_0x60d76d38fd10;
T_7 ;
    %wait E_0x60d76d329130;
    %load/vec4 v0x60d76d390280_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_7.0, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x60d76d390050_0, 0;
    %jmp T_7.1;
T_7.0 ;
    %load/vec4 v0x60d76d3901e0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_7.2, 8;
    %load/vec4 v0x60d76d38ff70_0;
    %assign/vec4 v0x60d76d390050_0, 0;
T_7.2 ;
T_7.1 ;
    %jmp T_7;
    .thread T_7;
    .scope S_0x60d76d364560;
T_8 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d3919f0_0, 0, 1;
T_8.0 ;
    %delay 500, 0;
    %load/vec4 v0x60d76d3919f0_0;
    %inv;
    %store/vec4 v0x60d76d3919f0_0, 0, 1;
    %jmp T_8.0;
    %end;
    .thread T_8;
    .scope S_0x60d76d364560;
T_9 ;
    %vpi_call 2 33 "$display", "%-8t << Beginning the reset >>", $time {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391a90_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391fa0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391820_0, 0, 1;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x60d76d391b30_0, 0, 8;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391f00_0, 0, 1;
    %delay 250, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x60d76d391f00_0, 0, 1;
    %vpi_call 2 40 "$display", "\012%-8t << Coming out of the reset >>\012", $time {0 0 0};
    %end;
    .thread T_9;
    .scope S_0x60d76d364560;
T_10 ;
    %vpi_call 2 44 "$dumpfile", "dump.vcd" {0 0 0};
    %vpi_call 2 45 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x60d76d364560 {0 0 0};
    %end;
    .thread T_10;
    .scope S_0x60d76d364560;
T_11 ;
    %delay 500, 0;
    %pushi/vec4 235, 0, 8;
    %store/vec4 v0x60d76d391b30_0, 0, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x60d76d391a90_0, 0, 1;
    %wait E_0x60d76d33ef20;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391a90_0, 0, 1;
    %wait E_0x60d76d33ef20;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x60d76d391fa0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x60d76d391820_0, 0, 1;
    %wait E_0x60d76d33ef20;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391820_0, 0, 1;
    %wait E_0x60d76d33ef20;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391fa0_0, 0, 1;
    %delay 500, 0;
    %pushi/vec4 89, 0, 8;
    %store/vec4 v0x60d76d391b30_0, 0, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x60d76d391a90_0, 0, 1;
    %wait E_0x60d76d33ef20;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391a90_0, 0, 1;
    %wait E_0x60d76d33ef20;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x60d76d391fa0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391820_0, 0, 1;
    %wait E_0x60d76d33ef20;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x60d76d391820_0, 0, 1;
    %wait E_0x60d76d33ef20;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391fa0_0, 0, 1;
    %delay 5000, 0;
    %vpi_call 2 72 "$finish" {0 0 0};
    %end;
    .thread T_11;
    .scope S_0x60d76d364560;
T_12 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391d80_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391e40_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x60d76d391c20_0, 0, 1;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x60d76d391cc0_0, 0, 8;
    %end;
    .thread T_12;
    .scope S_0x60d76d364560;
T_13 ;
    %wait E_0x60d76d33ea40;
    %load/vec4 v0x60d76d391a90_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_13.2, 9;
    %load/vec4 v0x60d76d391d80_0;
    %nor/r;
    %and;
T_13.2;
    %flag_set/vec4 8;
    %jmp/0xz  T_13.0, 8;
    %vpi_call 2 97 "$display", "\012" {0 0 0};
T_13.0 ;
    %load/vec4 v0x60d76d391a90_0;
    %load/vec4 v0x60d76d391d80_0;
    %cmp/ne;
    %jmp/1 T_13.7, 4;
    %flag_mov 8, 4;
    %load/vec4 v0x60d76d391fa0_0;
    %load/vec4 v0x60d76d391e40_0;
    %cmp/ne;
    %flag_or 4, 8;
T_13.7;
    %jmp/1 T_13.6, 4;
    %flag_mov 8, 4;
    %load/vec4 v0x60d76d391820_0;
    %load/vec4 v0x60d76d391c20_0;
    %cmp/ne;
    %flag_or 4, 8;
T_13.6;
    %jmp/1 T_13.5, 4;
    %flag_mov 8, 4;
    %load/vec4 v0x60d76d391930_0;
    %load/vec4 v0x60d76d391cc0_0;
    %cmp/ne;
    %flag_or 4, 8;
T_13.5;
    %jmp/0xz  T_13.3, 4;
    %load/vec4 v0x60d76d391a90_0;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_13.8, 8;
    %pushi/vec4 152787761, 0, 32; draw_string_vec4
    %pushi/vec4 993211501, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_13.9, 8;
T_13.8 ; End of true expr.
    %pushi/vec4 2444604166, 0, 60;
    %concati/vec4 13, 0, 4;
    %jmp/0 T_13.9, 8;
 ; End of false expr.
    %blend;
T_13.9;
    %load/vec4 v0x60d76d391fa0_0;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_13.10, 8;
    %pushi/vec4 152787761, 0, 32; draw_string_vec4
    %pushi/vec4 993211245, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_13.11, 8;
T_13.10 ; End of true expr.
    %pushi/vec4 2444604166, 0, 60;
    %concati/vec4 13, 0, 4;
    %jmp/0 T_13.11, 8;
 ; End of false expr.
    %blend;
T_13.11;
    %load/vec4 v0x60d76d391820_0;
    %load/vec4 v0x60d76d391c20_0;
    %cmp/ne;
    %flag_mov 8, 4;
    %jmp/0 T_13.12, 8;
    %pushi/vec4 151591771, 0, 32; draw_string_vec4
    %pushi/vec4 825963318, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 109, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_13.13, 8;
T_13.12 ; End of true expr.
    %pushi/vec4 2444604166, 0, 68;
    %concati/vec4 13, 0, 4;
    %jmp/0 T_13.13, 8;
 ; End of false expr.
    %blend;
T_13.13;
    %load/vec4 v0x60d76d391930_0;
    %load/vec4 v0x60d76d391cc0_0;
    %cmp/ne;
    %flag_mov 8, 4;
    %jmp/0 T_13.14, 8;
    %pushi/vec4 151591771, 0, 32; draw_string_vec4
    %pushi/vec4 825963313, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 109, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_13.15, 8;
T_13.14 ; End of true expr.
    %pushi/vec4 2444604166, 0, 68;
    %concati/vec4 13, 0, 4;
    %jmp/0 T_13.15, 8;
 ; End of false expr.
    %blend;
T_13.15;
    %vpi_call 2 102 "$display", "%t | Load=%s%b%s | Shift=%s%b%s | D0=%s%b%s | Q=%s%b%s", $time, S<3,vec4,u64>, v0x60d76d391a90_0, P_0x60d76d364860, S<2,vec4,u64>, v0x60d76d391fa0_0, P_0x60d76d364860, S<1,vec4,u72>, v0x60d76d391820_0, P_0x60d76d364860, S<0,vec4,u72>, v0x60d76d391930_0, P_0x60d76d364860 {4 0 0};
T_13.3 ;
    %load/vec4 v0x60d76d391a90_0;
    %assign/vec4 v0x60d76d391d80_0, 0;
    %load/vec4 v0x60d76d391fa0_0;
    %assign/vec4 v0x60d76d391e40_0, 0;
    %load/vec4 v0x60d76d391820_0;
    %assign/vec4 v0x60d76d391c20_0, 0;
    %load/vec4 v0x60d76d391930_0;
    %assign/vec4 v0x60d76d391cc0_0, 0;
    %jmp T_13;
    .thread T_13;
# The file index is used to find the file name in the following table.
:file_names 6;
    "N/A";
    "<interactive>";
    "Registers/REG_tb.v";
    "Registers/REG.v";
    "FlipFlop/D_FlipFlop.v";
    "MUX/MUX.v";
